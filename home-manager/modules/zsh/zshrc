#!/bin/sh

# some useful options (man zshoptions)
setopt autocd menucomplete
setopt interactive_comments
stty stop undef  # Disable ctrl-s to freeze terminal.
zle_highlight=('paste:none')

# beeping is annoying
unsetopt BEEP

setopt appendhistory

autoload -Uz compinit
zstyle ':completion:*' menu select
zstyle ':completion::complete:lsof:*' menu yes select
zmodload zsh/complist
compinit
_comp_options+=(globdots)		# Include hidden files.

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

# Colors
autoload -Uz colors && colors

# Key-bindings
bindkey -s '^o' 'yazi^M'
bindkey "^k" up-line-or-beginning-search # Up
bindkey "^j" down-line-or-beginning-search # Down

#  __      ___                                 _
#  \ \    / (_)                               | |
#   \ \  / / _ _ __ ___    _ __ ___   ___   __| | ___
#    \ \/ / | | '_ ` _ \  | '_ ` _ \ / _ \ / _` |/ _ \
#     \  /  | | | | | | | | | | | | | (_) | (_| |  __/
#      \/   |_|_| |_| |_| |_| |_| |_|\___/ \__,_|\___|
#

bindkey -v
export KEYTIMEOUT=1

# Use vim keys in tab complete menu:
bindkey -M menuselect '^h' vi-backward-char
bindkey -M menuselect '^k' vi-up-line-or-history
bindkey -M menuselect '^l' vi-forward-char
bindkey -M menuselect '^j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

# Change cursor shape for different vi modes.
function zle-keymap-select () {
    case $KEYMAP in
        vicmd) echo -ne '\e[1 q';;      # block
        viins|main) echo -ne '\e[5 q';; # beam
    esac
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

#   ______                _   _
#  |  ____|              | | (_)
#  | |__ _   _ _ __   ___| |_ _  ___  _ __  ___
#  |  __| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
#  | |  | |_| | | | | (__| |_| | (_) | | | \__ \
#  |_|   \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
#

# C++ build and run aliases
function co() {
  g++ -std=c++20 -O2 -g -o "${1%.*}.out" $1 -Wall;
}

function run() {
  co $1 && ./${1%.*}.out & fg;
}

